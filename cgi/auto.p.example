@conf[filespec]
$confdir[^file:dirname[$filespec]]

$charsetsdir[$confdir/charsets]
$sqldriversdir[$confdir/lib]

$CHARSETS[
	$.koi8-r[$charsetsdir/koi8-r.cfg]
	$.windows-1251[$charsetsdir/windows-1251.cfg]
]
#change your client libraries paths to those on your system
$SQL[
	$.drivers[^table::create{protocWol	driver	client
mysql	$sqldriversdir/libparser3mysql.so	/usr/local/lib/mysql/libmysqlclient.so
}]
]

#for ^file::load[name;user-name] mime-type autodetection
$MIME-TYPES[^table::create{ext	mime-type
7z	application/x-7z-compressed
au	audio/basic
avi	video/x-msvideo
css	text/css
cvs	text/csv
doc	application/msword
docx	application/vnd.openxmlformats-officedocument.wordprocessingml.document
dtd	application/xml-dtd
gif	image/gif
gz	application/x-gzip
htm	text/html
html	text/html
ico	image/x-icon
jpeg	image/jpeg
jpg	image/jpeg
js	application/javascript
log	text/plain
mid	audio/midi
midi	audio/midi
mov	video/quicktime
mp3	audio/mpeg
mpg	video/mpeg
mpeg	video/mpeg
mts	application/metastream
pdf	application/pdf
png	image/png
ppt	application/powerpoint
ra	audio/x-realaudio
ram	audio/x-pn-realaudio
rar	application/x-rar-compressed
rdf	application/rdf+xml
rpm	audio/x-pn-realaudio-plugin
rss	application/rss+xml
rtf	application/rtf
svg	image/svg+xml
swf	application/x-shockwave-flash
tar	application/x-tar
tgz	application/x-gzip
tif	image/tiff
txt	text/plain
wav	audio/x-wav
xls	application/vnd.ms-excel
xlsx	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
xml	text/xml
xsl	text/xml
zip	application/zip
}]

$LIMITS[
	$.post_max_size(10*0x400*0x400)
]	

#$MAIL[
#	$.sendmail[your sendmail command goes here]
#	these are tried when no 'sendmail' specified:
#	    /usr/sbin/sendmail -t -i -f postmaster
#	    /usr/lib/sendmail -t -i -f postmaster
#]


@fatal_error[title;subtitle;body][i]
<html>
<head><title>$title</title></head>
<body>
<h1>^if(def $subtitle){$subtitle;$title}</h1>
$body
#for [x] MSIE friendly
^for[i](0;512/8){<!-- -->}
</body>
</html>


@unhandled_exception_debug[exception;stack]
^fatal_error[Unhandled Exception^if(def $exception.type){ ($exception.type)};^untaint[html]{$exception.comment};
<pre><code>$exception.source</code></pre>
^if(def $exception.file){
^untaint[html]{<tt>$exception.file^(${exception.lineno}:$exception.colno^)</tt>}
}
^if($stack){
	<hr/>
	<style type="text/css">table {border-spacing: 10px^; border-collapse: collapse^;} td {padding: 0 1em 0 0^;}</style>
	<table>
	^stack.menu{
		<tr>
			<td>$stack.name</td>
			<td><tt>$stack.file^(${stack.lineno}:$stack.colno^)</tt></td>
		</tr>
	}
	</table>
}
]


@unhandled_exception_release[exception;stack][f]
^try{
	^if(def $env:HTTP_USER_AGENT && ^env:HTTP_USER_AGENT.lower[] eq "parser3"){
		^throw[;Exception while processing exception]
	}
	^cache[/../temp/cache/500/_$form:lang](3600*24){
		$f[^file::load[text;http://$env:SERVER_NAME/500/]]
		^taint[as-is][^f.text.match[
			(<meta[^^>]+http-equiv\s*=\s*(["'])content-type\2[^^>]+>)
		][ix]{<meta http-equiv="content-type" content="$response:content-type.value^; charset=$response:content-type.charset" />}]
	}{
		$exception.handled[cache]
	}
}{
	$exception.handled(1)
	^fatal_error[Unhandled Exception;;
		<p>The server encountered an unhandled exception
		and was unable to complete your request.</p>
		<p>Please contact the server administrator, $env:SERVER_ADMIN
		and inform them of the time the error occurred,
		and anything you might have done that may have caused the error.</p>
		<p>More information about this error may be available in the Parser error log
		or in debug version of unhandled_exception.</p>
	]
}


@unhandled_exception[exception;stack]
$response:status(500)
$response:charset[Windows-1251]
$response:content-type[
	$.value[text/html]
	$.charset[$response:charset]
]
^if(^isDeveloper[]){
	^unhandled_exception_debug[$exception;$stack]
}{
	^unhandled_exception_release[$exception;$stack]
}



@isDeveloper[][sVisitorIP;tDeveloperIP]
^if(!($bDeveloper is "bool")){
	$sVisitorIP[$env:REMOTE_ADDR]
	^if(def $sVisitorIP){
		^if(-f "/../data/etc/ip.cfg"){
			$tDeveloperIP[^table::load[/../data/etc/ip.cfg]]
		}
		$bDeveloper($tDeveloperIP && ^tDeveloperIP.locate(^sVisitorIP.match[^taint[as-is][$tDeveloperIP.ip]]))
	}{
		$bDeveloper(true)
	}
}
$result($bDeveloper)



@log404[][str;now]
$now[^date::now[]]
$str[^now.sql-string[]	$request:uri	$env:HTTP_REFERER	$env:REMOTE_ADDR^#0A]
^str.save[append;$TEMP_DIR/missing_url.txt]
#end @log404[]



@auto[]
$request:charset[UTF-8]
$response:charset[UTF-8]
$response:content-type[
	$.value[text/html]
	$.charset[$response:charset]
]

$EXEC_DIR[/../exec]
$DATA_DIR[/../data]
$TEMP_DIR[/../temp]
$CACHE_DIR[$TEMP_DIR/cache]

$CLASS_PATH[^table::create{path
$DATA_DIR
$DATA_DIR/classes/sql
$DATA_DIR/classes/auth
$DATA_DIR/classes/io
$DATA_DIR/classes/utils
$DATA_DIR/classes/engine
$DATA_DIR/classes
}]

$SQL.connect-string[mysql://]
